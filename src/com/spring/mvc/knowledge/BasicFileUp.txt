SpringMVC 实现文件的上传
1、导入相关 jar 包
   commons-fileupload-1.4.jar : 用于文件的上传
   commons-io-2.7.jar
2、在 [dispatcher]-servlet.xml 配置文件（可以自定义的，可以默认生成的）中配置文件上传解析器
   <!--配置文件上传解析器-->
   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
       <property name="defaultEncoding" value="utf-8"/>
       <!-- 指定以字节为单位的最大文件大小 1024*1024*10 10M-->
       <property name="maxUploadSize" value="10485760"/>
       <!-- 最大文件缓存大小 -->
       <property name="maxInMemorySize" value="40960"/>
   </bean>
3、定义文件上传处理的控制器：获取并处理文件
   /**
        * 获取并处理单个文件
        * @param file  用来获取客户端上传的单个文件 todo 注解参数值应与表单中 <input type="file" name="file"/> 的 name 一致
        * @param content 用来获取表单中填写的内容 todo 注解参数值应与表单中 <input type="text" name="content"/> 的 name 一致
        * @param request
        */
       @RequestMapping("/upload/file.form")
       public void uploadFile(@RequestParam("file") CommonsMultipartFile file,
                              @RequestParam("content") String content,
                              HttpServletRequest request,
                              HttpServletResponse response) throws Exception{
           //获取上传文件的文件名
           String fileName = file.getOriginalFilename();
           System.out.println("fileName: " + fileName);
           //获取上传文件的输入流 todo 获取到输入流，还不知道怎么读取文件或者输出文件嘛。。
           //InputStream is = file.getInputStream();

           //保存的路径，如果父路径不存在需要手动创建或者代码创建
           String path = request.getServletContext().getRealPath("file-upload" + File.separator + fileName);
           System.out.println("path: " + path);

           //保存的目标文件
           File dest = new File(path);
           if (!dest.getParentFile().exists()){
               dest.getParentFile().mkdirs();
           }

           //保存文件到指定路径文件
           file.transferTo(dest);

           //
           response.setContentType("text/html; charset=utf-8");
           response.getWriter().print("文件保存成功");

       }

















